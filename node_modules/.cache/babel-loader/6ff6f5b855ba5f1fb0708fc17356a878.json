{"ast":null,"code":"var _jsxFileName = \"/Users/22282092/Documents/TCC/FRONT-CADASTRO/FrontWeb-Clinica/src/pages/Register/components/RegisterClinic.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport '../styles/RegisterClinic.css';\nimport InputMask from 'react-input-mask';\nimport Header from '../../Main/components/Header';\n\nfunction RegisterClinic() {\n  const [formData, setFormData] = useState({\n    razao_social: '',\n    cnpj: '123456789',\n    telefone: '',\n    cep: '',\n    complemento: 'NAO MUDOU',\n    email: '',\n    senha: '',\n    foto: 'NAO MUDOU',\n    tipo_telefone: 1,\n    numero: '1234567890',\n    descricao: 'NAO MUDOU',\n    endereco: '',\n    neighborhood: '',\n    cidade: ''\n  }); // Função para buscar informações de endereço com base no CEP\n\n  const fetchAddressInfo = async () => {\n    const {\n      cep\n    } = formData;\n\n    if (cep) {\n      try {\n        const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n\n        if (response.ok) {\n          const data = await response.json();\n          setFormData({ ...formData,\n            endereco: data.logradouro || '',\n            neighborhood: data.bairro || '',\n            cidade: data.localidade || ''\n          });\n        } else {\n          console.error('Erro ao buscar informações de endereço');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar informações de endereço:', error);\n      }\n    }\n  }; // Efeito para buscar informações de endereço quando o campo CEP muda\n\n\n  useEffect(() => {\n    fetchAddressInfo();\n  }, [formData.cep]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:3001/clinica', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n\n      if (response.ok) {\n        console.log('Dados enviados com sucesso!');\n      } else {\n        const responseData = await response.json();\n        console.error('Erro ao enviar os dados:', responseData);\n      }\n    } catch (error) {\n      console.error('Erro ao enviar os dados:', error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container-geral-register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Cadastre sua Cl\\xEDnica\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"oi\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))));\n}\n\nexport default RegisterClinic;","map":{"version":3,"sources":["/Users/22282092/Documents/TCC/FRONT-CADASTRO/FrontWeb-Clinica/src/pages/Register/components/RegisterClinic.jsx"],"names":["React","useState","useEffect","InputMask","Header","RegisterClinic","formData","setFormData","razao_social","cnpj","telefone","cep","complemento","email","senha","foto","tipo_telefone","numero","descricao","endereco","neighborhood","cidade","fetchAddressInfo","response","fetch","ok","data","json","logradouro","bairro","localidade","console","error","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","log","responseData","handleChange","event","name","value","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/RegisterClinic.css';\nimport InputMask from 'react-input-mask';\nimport Header from '../../Main/components/Header';\n\nfunction RegisterClinic() {\n  const [formData, setFormData] = useState({\n    razao_social: '',\n    cnpj: '123456789',\n    telefone: '',\n    cep: '',\n    complemento: 'NAO MUDOU',\n    email: '',\n    senha: '',\n    foto: 'NAO MUDOU',\n    tipo_telefone: 1,\n    numero: '1234567890',\n    descricao: 'NAO MUDOU',\n    endereco: '',\n    neighborhood: '',\n    cidade: '',\n  });\n\n  // Função para buscar informações de endereço com base no CEP\n  const fetchAddressInfo = async () => {\n    const { cep } = formData;\n    if (cep) {\n      try {\n        const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n        if (response.ok) {\n          const data = await response.json();\n          setFormData({\n            ...formData,\n            endereco: data.logradouro || '',\n            neighborhood: data.bairro || '',\n            cidade: data.localidade || '',\n          });\n        } else {\n          console.error('Erro ao buscar informações de endereço');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar informações de endereço:', error);\n      }\n    }\n  };\n\n  // Efeito para buscar informações de endereço quando o campo CEP muda\n  useEffect(() => {\n    fetchAddressInfo();\n  }, [formData.cep]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:3001/clinica', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        console.log('Dados enviados com sucesso!');\n      } else {\n        const responseData = await response.json();\n        console.error('Erro ao enviar os dados:', responseData);\n      }\n    } catch (error) {\n      console.error('Erro ao enviar os dados:', error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <Header />\n\n      <div className=\"container-geral-register\">\n        <h1>Cadastre sua Clínica</h1>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"oi\">\n\n          </div>\n        </form>\n        \n      </div>\n\n    </div>\n  );\n}\n\nexport default RegisterClinic;"]},"metadata":{},"sourceType":"module"}