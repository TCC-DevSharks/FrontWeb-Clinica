{"ast":null,"code":"var _jsxFileName = \"/Users/22282092/Documents/TCC/FRONT-CADASTRO/FrontWeb-Clinica/src/pages/Register/components/RegisterClinic.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport InputMask from 'react-input-mask';\n\nfunction RegisterClinic() {\n  const [formData, setFormData] = useState({\n    razaoSocial: '',\n    cnpj: '',\n    telefone: '',\n    endereco: '',\n    complemento: '',\n    cidade: '',\n    email: '',\n    senha: '',\n    confirmarSenha: ''\n  });\n  const [cep, setCep] = useState('');\n  const [street, setStreet] = useState('');\n  const [neighborhood, setNeighborhood] = useState('');\n  const [city, setCity] = useState('');\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleCepChange = event => {\n    const newCep = event.target.value;\n    setCep(newCep);\n  };\n\n  const fetchAddressFromViaCEP = async () => {\n    try {\n      const response = await axios.get(`https://viacep.com.br/ws/${cep}/json/`);\n      const data = response.data;\n      setStreet(data.logradouro);\n      setNeighborhood(data.bairro);\n      setCity(data.localidade);\n    } catch (error) {\n      console.error('Erro ao buscar endereço:', error); // Lidar com erros, por exemplo, exibir uma mensagem ao usuário\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // Enviar os dados para o servidor usando uma requisição POST\n      const response = await axios.post('http://seu-servidor/api/cadastro-clinica', formData);\n      console.log('Cadastro da clínica realizado com sucesso!', response.data); // Lógica adicional após o cadastro, como redirecionar o usuário, pode ser adicionada aqui.\n    } catch (error) {\n      console.error('Erro ao cadastrar a clínica:', error);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Continuar\")));\n}\n\nexport default RegisterClinic;","map":{"version":3,"sources":["/Users/22282092/Documents/TCC/FRONT-CADASTRO/FrontWeb-Clinica/src/pages/Register/components/RegisterClinic.jsx"],"names":["React","useState","axios","InputMask","RegisterClinic","formData","setFormData","razaoSocial","cnpj","telefone","endereco","complemento","cidade","email","senha","confirmarSenha","cep","setCep","street","setStreet","neighborhood","setNeighborhood","city","setCity","handleInputChange","e","name","value","target","handleCepChange","event","newCep","fetchAddressFromViaCEP","response","get","data","logradouro","bairro","localidade","error","console","handleSubmit","preventDefault","post","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,SAASC,cAAT,GAA0B;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACvCM,IAAAA,WAAW,EAAE,EAD0B;AAEvCC,IAAAA,IAAI,EAAE,EAFiC;AAGvCC,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,QAAQ,EAAE,EAJ6B;AAKvCC,IAAAA,WAAW,EAAE,EAL0B;AAMvCC,IAAAA,MAAM,EAAE,EAN+B;AAOvCC,IAAAA,KAAK,EAAE,EAPgC;AAQvCC,IAAAA,KAAK,EAAE,EARgC;AASvCC,IAAAA,cAAc,EAAE;AATuB,GAAD,CAAxC;AAYA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMuB,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAtB,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACqB,IAAD,GAAQC;AAAvB,KAAD,CAAX;AACD,GAHD;;AAKA,QAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,UAAMC,MAAM,GAAGD,KAAK,CAACF,MAAN,CAAaD,KAA5B;AACAV,IAAAA,MAAM,CAACc,MAAD,CAAN;AACD,GAHD;;AAKA,QAAMC,sBAAsB,GAAG,YAAY;AACzC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,GAAN,CAAW,4BAA2BlB,GAAI,QAA1C,CAAvB;AACA,YAAMmB,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AAEAhB,MAAAA,SAAS,CAACgB,IAAI,CAACC,UAAN,CAAT;AACAf,MAAAA,eAAe,CAACc,IAAI,CAACE,MAAN,CAAf;AACAd,MAAAA,OAAO,CAACY,IAAI,CAACG,UAAN,CAAP;AACD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C,EADc,CAEd;AACD;AACF,GAZD;;AAcA,QAAME,YAAY,GAAG,MAAOhB,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACiB,cAAF;;AACA,QAAI;AACF;AACA,YAAMT,QAAQ,GAAG,MAAM/B,KAAK,CAACyC,IAAN,CAAW,0CAAX,EAAuDtC,QAAvD,CAAvB;AACAmC,MAAAA,OAAO,CAACI,GAAR,CAAY,4CAAZ,EAA0DX,QAAQ,CAACE,IAAnE,EAHE,CAKF;AACD,KAND,CAME,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AACF,GAXD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CAFF,CADF;AASD;;AAED,eAAerC,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport InputMask from 'react-input-mask';\n\nfunction RegisterClinic() {\n  const [formData, setFormData] = useState({\n    razaoSocial: '',\n    cnpj: '',\n    telefone: '',\n    endereco: '',\n    complemento: '',\n    cidade: '',\n    email: '',\n    senha: '',\n    confirmarSenha: '',\n  });\n\n  const [cep, setCep] = useState('');\n  const [street, setStreet] = useState('');\n  const [neighborhood, setNeighborhood] = useState('');\n  const [city, setCity] = useState('');\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleCepChange = (event) => {\n    const newCep = event.target.value;\n    setCep(newCep);\n  };\n\n  const fetchAddressFromViaCEP = async () => {\n    try {\n      const response = await axios.get(`https://viacep.com.br/ws/${cep}/json/`);\n      const data = response.data;\n\n      setStreet(data.logradouro);\n      setNeighborhood(data.bairro);\n      setCity(data.localidade);\n    } catch (error) {\n      console.error('Erro ao buscar endereço:', error);\n      // Lidar com erros, por exemplo, exibir uma mensagem ao usuário\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Enviar os dados para o servidor usando uma requisição POST\n      const response = await axios.post('http://seu-servidor/api/cadastro-clinica', formData);\n      console.log('Cadastro da clínica realizado com sucesso!', response.data);\n\n      // Lógica adicional após o cadastro, como redirecionar o usuário, pode ser adicionada aqui.\n    } catch (error) {\n      console.error('Erro ao cadastrar a clínica:', error);\n    }\n  };\n\n  return (\n    <div className=\"register\">\n      {/* ... (seu código HTML existente) ... */}\n      <form onSubmit={handleSubmit}>\n        {/* ... (seus campos de entrada existentes) ... */}\n        <button type=\"submit\">Continuar</button>\n      </form>\n    </div>\n  );\n}\n\nexport default RegisterClinic;\n"]},"metadata":{},"sourceType":"module"}